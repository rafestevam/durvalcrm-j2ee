<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>br.org.cecairbar</groupId>
    <artifactId>durvalcrm-j2ee</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    
    <name>DurvalCRM J2EE</name>
    <description>DurvalCRM membership management system - J2EE version for WildFly</description>
    
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        
        <!-- Deployment Configuration -->
        <!-- 
        Usage Examples:
        - Development: mvn clean package wildfly:deploy
        - Staging: mvn clean package deploy -Pstaging
        - Production: mvn clean package wildfly:deploy -Pproduction
        
        Staging Environment:
        - Console: https://localhost:9443/wildfly/ (admin/admin123)
        - Application will be available at: https://localhost:9443/api/
        - Backend API: https://localhost:9443/api/v1/...
        
        Testing Deployment:
        1. Start Vagrant VM: vagrant up (in deployment/environments/staging/Vagrant/)
        2. Deploy: mvn clean package deploy -Pstaging
        3. Access API: https://localhost:9443/api/
        
        Note: Staging uses SSH + WildFly CLI for deployment respecting HTTPS-only architecture
        -->
        
        <!-- Jakarta EE versions for WildFly 37 -->
        <hibernate.version>6.2.13.Final</hibernate.version>
        <postgresql.version>42.7.3</postgresql.version>
        <mapstruct.version>1.6.0</mapstruct.version>
        <lombok.version>1.18.30</lombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        
        <!-- Plugin versions -->
        <maven.compiler.version>3.11.0</maven.compiler.version>
        <maven.war.version>3.4.0</maven.war.version>
        <maven.surefire.version>3.1.2</maven.surefire.version>
        <maven.failsafe.version>3.1.2</maven.failsafe.version>
    </properties>
    
    <dependencies>
        <!-- Jakarta EE 10 API -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>10.0.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- PostgreSQL Driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Jackson for JSON processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.15.2</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.15.2</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Hibernate Core for annotations -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- MapStruct for DTO mapping -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.4.0</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Arquillian for integration testing (optional) -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>1.7.0.Alpha10</version>
            <scope>test</scope>
        </dependency>
        
        <!-- H2 for testing -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.220</version>
            <scope>test</scope>
        </dependency>
        
        <!-- RESTEasy for JAX-RS testing -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-core</artifactId>
            <version>6.2.5.Final</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>durvalcrm</finalName>
        
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <annotationProcessorPaths>
                        <!-- IMPORTANTE: Lombok deve vir PRIMEIRO -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <!-- Binding entre Lombok e MapStruct -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                        <!-- MapStruct processor por último -->
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <!-- Configurações para MapStruct -->
                    <compilerArgs>
                        <arg>-Amapstruct.defaultComponentModel=cdi</arg>
                        <arg>-Amapstruct.verbose=true</arg>
                        <arg>-Amapstruct.defaultInjectionStrategy=constructor</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            
            <!-- Maven WAR Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.version}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            
            <!-- WildFly Maven Plugin for Deployment -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>4.2.0.Final</version>
                <configuration>
                    <hostname>${wildfly.hostname}</hostname>
                    <port>${wildfly.port}</port>
                    <protocol>${wildfly.protocol}</protocol>
                    <username>${wildfly.username}</username>
                    <password>${wildfly.password}</password>
                    <timeout>60000</timeout>
                    <filename>${project.build.finalName}.war</filename>
                    <force>true</force>
                </configuration>
            </plugin>
            
            <!-- Maven Exec Plugin for SSH-based deployment to staging -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <executable>echo</executable>
                    <arguments>
                        <argument>WildFly CLI deployment not configured for this profile</argument>
                    </arguments>
                </configuration>
            </plugin>
            
            <!-- Maven Surefire Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
            </plugin>
            
            <!-- Maven Failsafe Plugin for Integration Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- JaCoCo Maven Plugin for Code Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.10</version>
                <configuration>
                    <excludes>
                        <!-- Exclude DTOs -->
                        <exclude>**/dto/**</exclude>
                        <!-- Exclude Mappers generated by MapStruct -->
                        <exclude>**/mapper/**Impl.class</exclude>
                        <!-- Exclude Configuration classes -->
                        <exclude>**/RestApplication.class</exclude>
                        <exclude>**/EntityManagerProducer.class</exclude>
                        <!-- Exclude Exception handlers -->
                        <exclude>**/exception/**</exclude>
                        <!-- Exclude Filters -->
                        <exclude>**/filter/**</exclude>
                        <!-- Exclude Entities (already tested) -->
                        <exclude>**/entity/**</exclude>
                        <!-- Exclude Infrastructure repositories (without business logic) -->
                        <exclude>**/infrastructure/persistence/repository/**</exclude>
                        <!-- Exclude Service layer (PIX, etc) -->
                        <exclude>**/application/service/**</exclude>
                        <!-- Exclude Scheduler -->
                        <exclude>**/infrastructure/scheduler/**</exclude>
                        <!-- Exclude Builder patterns -->
                        <exclude>**/*Builder.class</exclude>
                        <!-- Exclude inner classes for requests/responses -->
                        <exclude>**/*Request.class</exclude>
                        <exclude>**/*Response.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <!-- Coverage check enabled for CI -->
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.30</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.25</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                                <rule>
                                    <element>PACKAGE</element>
                                    <includes>
                                        <include>br.org.cecairbar.durvalcrm.domain.model</include>
                                        <include>br.org.cecairbar.durvalcrm.application.usecase.impl</include>
                                    </includes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.85</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <!-- Development Profile -->
        <profile>
            <id>development</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip>false</maven.test.skip>
                <wildfly.hostname>127.0.0.1</wildfly.hostname>
                <wildfly.port>9991</wildfly.port>
                <wildfly.protocol>remote+http</wildfly.protocol>
                <wildfly.username>admin</wildfly.username>
                <wildfly.password>admin123</wildfly.password>
            </properties>
        </profile>
        
        <!-- Staging Profile -->
        <!-- Deploy to WildFly via SSH tunnel since only port 9443 is exposed from VM -->
        <!-- SSH tunnel required: ssh -L 9990:localhost:9990 vagrant@localhost -p 2222 -->
        <profile>
            <id>staging</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <!-- Alternative: Use SSH tunnel to access WildFly management directly -->
                <wildfly.hostname>localhost</wildfly.hostname>
                <wildfly.port>9443</wildfly.port>
                <wildfly.protocol>remote+https</wildfly.protocol>
                <wildfly.username>admin</wildfly.username>
                <wildfly.password>admin123</wildfly.password>
                <!-- Additional staging-specific properties -->
                <wildfly.deployment.name>durvalcrm.war</wildfly.deployment.name>
                <wildfly.context.root>/durvalcrm</wildfly.context.root>
                <wildfly.managementUrl>https://localhost:9443/management/</wildfly.managementUrl>
                
                <!-- SSH connection properties for staging deployment -->
                <staging.ssh.host>127.0.0.1</staging.ssh.host>
                <staging.ssh.port>2222</staging.ssh.port>
                <staging.ssh.user>vagrant</staging.ssh.user>
                <staging.ssh.key>/Users/rafaeldeoliveira/projects/DurvalCRM/durvalcrm-deployment/environments/staging/Vagrant/.vagrant/machines/default/vmware_desktop/private_key</staging.ssh.key>
            </properties>
            <build>
                <plugins>
                    <!-- Skip default deployment to repository -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <configuration>
                            <hostname>${wildfly.hostname}</hostname>
                            <port>${wildfly.port}</port>
                            <protocol>${wildfly.protocol}</protocol>
                            <username>${wildfly.username}</username>
                            <password>${wildfly.password}</password>
                            <managementUrl>${wildfly.managementUrl}</managementUrl>
                            <timeout>180000</timeout>
                            <filename>${project.build.finalName}.war</filename>
                            <force>true</force>
                            <!-- Add staging-specific deployment options -->
                            <checkPackaging>false</checkPackaging>
                            <!-- Runtime name for the deployment -->
                            <name>${project.build.finalName}.war</name>

                        </configuration>
                    </plugin>
                    
                    <!-- SSH-based deployment using shell script -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-to-staging</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/deploy-staging.sh</executable>
                                    <arguments>
                                        <argument>${project.build.directory}/${project.build.finalName}.war</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Production Profile -->
        <profile>
            <id>production</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <!-- Production configuration for durvalcrm.org domain with HTTPS on port 9443 -->
                <wildfly.hostname>72.60.12.121</wildfly.hostname>
                <wildfly.port>443</wildfly.port>
                <wildfly.protocol>remote+https</wildfly.protocol>
                <wildfly.username>admin</wildfly.username>
                <wildfly.password>admin123</wildfly.password>
                <!-- Additional production-specific properties -->
                <wildfly.deployment.name>durvalcrm.war</wildfly.deployment.name>
                <wildfly.context.root>/durvalcrm</wildfly.context.root>
                <wildfly.managementUrl>https://management.cecairbar.org.br</wildfly.managementUrl>
                
                <!-- SSH connection properties for production deployment -->
                <production.ssh.host>72.60.12.121</production.ssh.host>
                <production.ssh.port>22</production.ssh.port>
                <production.ssh.user>root</production.ssh.user>
                <!-- SSH key path should be configured externally or use SSH agent -->
            </properties>
            <build>
                <plugins>
                    <!-- Skip default deployment to repository -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <configuration>
                            <hostname>${wildfly.hostname}</hostname>
                            <port>${wildfly.port}</port>
                            <protocol>${wildfly.protocol}</protocol>
                            <username>${wildfly.username}</username>
                            <password>${wildfly.password}</password>
                            <managementUrl>${wildfly.managementUrl}</managementUrl>
                            <timeout>180000</timeout>
                            <filename>${project.build.finalName}.war</filename>
                            <force>true</force>
                            <!-- Add production-specific deployment options -->
                            <checkPackaging>false</checkPackaging>
                            <!-- Runtime name for the deployment -->
                            <name>${project.build.finalName}.war</name>
                        </configuration>
                    </plugin>
                    
                    <!-- SSH-based deployment using shell script -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-to-production</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/deploy-production.sh</executable>
                                    <arguments>
                                        <argument>${project.build.directory}/${project.build.finalName}.war</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>